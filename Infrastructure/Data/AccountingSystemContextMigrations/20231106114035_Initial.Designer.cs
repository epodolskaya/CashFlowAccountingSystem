// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.AccountingSystemContextMigrations
{
    [DbContext(typeof(AccountingSystemContext))]
    [Migration("20231106114035_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApplicationCore.Entity.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("phone_number");

                    b.Property<long>("PositionId")
                        .HasColumnType("bigint")
                        .HasColumnName("position_id");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("salary");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_employee");

                    b.HasIndex("PositionId")
                        .HasDatabaseName("ix_employee_position_id");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entity.Operation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext")
                        .HasColumnName("comment");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("sum");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_operations");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_operations_category_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_operations_type_id");

                    b.ToTable("operations", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entity.OperationCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_operation_categories");

                    b.ToTable("operation_categories", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entity.OperationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_operation_types");

                    b.ToTable("operation_types", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entity.Position", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_positions");

                    b.ToTable("positions", (string)null);
                });

            modelBuilder.Entity("ApplicationCore.Entity.Employee", b =>
                {
                    b.HasOne("ApplicationCore.Entity.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_positions_position_id");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Operation", b =>
                {
                    b.HasOne("ApplicationCore.Entity.OperationCategory", "Category")
                        .WithMany("Operations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_operations_operation_categories_category_id");

                    b.HasOne("ApplicationCore.Entity.OperationType", "Type")
                        .WithMany("Operations")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_operations_operation_types_type_id");

                    b.Navigation("Category");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ApplicationCore.Entity.OperationCategory", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("ApplicationCore.Entity.OperationType", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("ApplicationCore.Entity.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
